Ich hab mir die Ferkel-Geschichte nochmal angeschaut. Zuerstmal die Reihenfolge der abgespielten Samples in den beiden Modi Entdecken und Wissen. 

Ferkel, Modus Entdecken:

161 (Grunzgeräusche)
162 "Die kleinen Schweine heissen Ferkel"
14  (Stille)
163 "Willst du mehr über Schweine und Ferkel wissen?"
116 "Dann tippe sie bei Wissen noch einmal an""

Nach den Grunzgeräuschen (161) passiert nichts. Beim nächsten Tippen werden 162,14,163,116 nacheinander ohne Interaktion abgespielt. 

Ferkel, Modus Wissen:

164 "Eine Sau bekommt zweimal im Jahr 6-8 Ferkel. Die Ferkel können gleichzeitig an den Zitzen saugen."
14 (Stille)
140 "Über die Ziegen gibt es noch mehr zu erfahren. Tippe auf eine der Ziegen!"

Die beschriebenen Abfolgen würden mit diesem Jumptable erfüllt, wenn zuerst Zeile 1 und dann Zeile 2 (Entdecken) bzw. Zeile 3 (Wissen) abgearbeitet wird. Die letzte Zeile gehört hier zum Wissen-Modus. Sie wird scheinbar nie abgespielt. Das _könnte_ daran liegen, dass in der dritten Zeile nur ein F-Kommando enthalten ist.

Jump table at 000079D0:
    2: F1(1,30) F2(0,2,30) E Play(0) [161]
    2: F1(1,30) F2(1,5,30) F1(0,0) Play(0) Play(1) Play(2) Play(3) [162,14,163,116]
    1: F2(2,3,0) Play(0) Play(1) Play(2) [164,14,140]
    1: F2(3,1,0) PlayOneFromSublist(1..0) [162,161]


Es gibt noch weitere Tabellen:

Jump table at 00007816:
    2: F1(1,30) F2(0,2,30) E PlayOneFromSublist(1..0) [161,162]
    1[0000 1E00]: F2(1,5,30) F1(0,0) PlayOneFromSublist(1..0) Play(2) Play(3) Play(4) [162,161,14,163,116]
    1: F2(2,3,0) Play(0) Play(1) Play(2) [164,14,140] 
    1: F2(3,4,0) Play(0) Play(1) Play(2) Play(3) [162,14,163,116]

Hier nochmal die fast identische Jumptable, die aber am Ende des letzten Kommandos den Hinweis auf ein Spiel enthält (33). Der kommt im "Geschichten-Modus", weswegen ich denke, dass der erste Parameter der F-Kommandos für den Modus steht: 1=Entdecken, 2=Wissen, 3=Geschichte, 4=Spiel

33 "Lust auf ein Spiel? Dann los! Berühre den Würfel"

Jump table at 00007B75:
    2: F1(1,30) F2(0,2,30) E Play(0) [161]
    2: F1(1,30) F2(1,5,30) F1(0,0) Play(0) Play(1) Play(2) Play(3) [162,14,163,116]
    1: F2(2,3,0) Play(0) Play(1) Play(2) [164,14,140]
    1: F2(3,2,0) PlayOneFromSublist(1..0) Play(2) [162,161,33]

Und hier noch eine (das sind dann aber auch alle, denke ich:

Jump table at 0000766A:
    2: F1(1,30) F2(0,2,30) E Play(0) [161]
    2: F1(1,30) F2(1,5,30) F1(0,0) Play(0) Play(1) Play(2) Play(3) [162,14,163,116]
    1: F2(2,3,0) Play(0) Play(1) Play(2) [164,14,140]
    1: F2(3,2,0) Play(0) Play(1) [161,33]


Auf der Seite gibt es 4 Ferkel, die man alle antippen kann. Möglicherweise haben diese alle unterschiedliche (gedruckte) Codes, so dass 4 Jumptable-Einträge plausibel erscheinen. 

Ich hab jetzt den Debug-Modus aktiviert (Power-On und Volume-Down gleichzeitig, nach einmal + gedrückt) und die vier Ferkel untersucht. Es wird für alle 4 ein Code aus jeweils 4 Silben angesagt, für jedes Ferkel was anderes:

Ferkel 1 (unten links): yi se tschau tschau
Ferkel 2 (unten rechts): yi ou lien lien
Ferkel 3 (ganz oben, halb verdeckt): yi ou lien ai
Ferkel 4 (vor Ferkel 3): yi ou lien yi

(Wenn man einen Weg fände, die chin. Samples für die Zahlen zu ersetzen, würde man sich leichter tun... ;-)

Mit folgender Tabelle (Quelle: http://www.nsonic.de/chinesisch/anfaenger/tag1/tag1.htm) hab ich versucht, das zu dekodieren:
  	0 	lĭng 	3. Ton. Wird gesprochen wie geschrieben 'ling'.
  	1 	yī 	1. Ton. Das 'y' vor einem 'i' ist stumm. Es wird also nur ein 'i' gesprochen.
  	2 	èr 	4. Ton. Das 'e' ist sehr kurz und klingt daher fast wie ein 'a'. 
Das 'r' hat nichts mit unseren europäischen formen des 'r' zu tun. Wenn Du weißt wie ein amerikanischen 'r' klingt dann sprich es so aus - aber hör vorher auf ;-) Es ist also ein halbes amerikanisches 'r' - sehr 'nach innen' gesprochen.
  	3 	sān 	1. Ton. Das 's' wird scharf gesprochen (wie 'ß'). Ansonsten wie's da steht.
  	4 	sì 	4. Ton. Auch hier ein schafes 's'. Das 'i' hat jetzt allerdings nichts mit einem gängigen 'i' zu tun. Dieses 'i' wird quasi 'nach innen' gesprochen und auch noch zur Hälfte verschluckt.
  	5 	wŭ 	3. Ton. Das 'w' ist stumm. Es wird nur ein geschwungenes 'u' gesprochen. (wie ein Schlossgespenst 'uuuu' :-) )
  	6 	lìu 	4. Ton. Dadurch, dass das 'i' sehr kurz gesprochen wird mutiert es fast zu einem 'e'. Es klingt dann 'fast' so, als würde man sehr schnell 'leo' sagen, weil einfach keine Zeit bleibt die vokale voll zu betonen.
  	7 	qī 	1. Ton. Das 'q' ist kein 'Qu'. Dieses 'q' ist ein 'Zischlaut'. Am ehesten würde man diese Aussprache wohl in deutscher Schreibweise mit 'dchi' beschreiben.
  	8 	bā 	1. Ton. So wie's da steht.
  	9 	jĭu 	3. Ton. Das 'j' ist keines :-). Es wird eher wie ein 'dj' gesprochen. Der Rest klingt ähnlich wie das norddeutsche 'Jou'. Also ein geschwungenes 'djiou'.
  	10 	shí 	2. Ton. 'sh' wird gesprochen wie 'sch'. Das 'i' wird ähnlich verschluckt wie bei der 4 (s. oben). Diese Zahl ist besonders gemein, weil man sonst beim Zählen mit dem Ton immer runtergeht wenn man bei der 10 angelangt ist. Hier jedoch geht der Ton fragend rauf! Achtet darauf beim üben.

Daraus leite ich folgende Codes ab:
Ferkel 1: 1499
Ferkel 2: 1500
Ferkel 3: 1502
Ferkel 4: 1501

Diese (aufeinanderfolgenden!) Zahlen müssten sich nach meinem Verständnis in Offsets in der Jumptable übesetzen lassen.

Die 4 gefunden Tabellen liegen an diesen Adressen 0000766A, 00007816, 000079D0 und 00007B75. Diese 4 Adressen finden sich aufeinanderfolgend ab Adresse 0x00000390 im gme-File:

00000390  6a 76 00 00 16 78 00 00  d0 79 00 00 75 7b 00 00

Die Jumptable beginnt bei 0x0200, also stehen die 4 Adressen bei den Offsets 0x0190 ff. 0x190 ist in Dezimalschreibweise 400. Das geteilt durch 4 (1 Offset = 4 Bytes) ergibt 100.

Die Adresse fuer den Code 1499 steht also an der 100sten Adresse. Somit sind 1399 davon abzuziehen und das Ergebnis mit 4 zu mutiplizieren, um das korrekt Offset zum Beginn des Maintables zu erhalten.

Die ersten 1399 Werte werden offenbar nicht verwendet (oder gesondert behandelt).

Durch Abgleichen und Herumprobieren kam ich nun darauf, dass die ersten beiden 32bit-Wörter im Maintable den letzten und den ersten Code in diesem Buch beinhalten. Beim Bauernhof ist der erste Code 1401 und der letzte 1728 (0x6c0). 1401 ist 2 groesser als die oben ermittelten 1399, was sich aber dadurch leicht erklären laesst, dass ich mich oben auf den Beginn der Maintable bezog, korrekt ist aber der Bezug auf Maintable+8 (denn die ersten 8 Bytes sind ja die zwei eben beschriebenen Werte), dann passt das.

Demnach ist für Ferkel 1 die Tabelle 766a zuständig, für Ferkel 2 7816, für Ferkel 3 79d0, für Ferkel 4 7b75.














