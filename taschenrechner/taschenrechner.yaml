product-id: 42
comment: Ein akustischer Taschenrechner
init: $zahl := 0 $eingabe := 0
scripts:

  eins:
  - $eingabe *= 10 $eingabe += 1 $zahl := $eingabe J(sag_zahl)
  zwei:
  - $eingabe *= 10 $eingabe += 2 $zahl := $eingabe J(sag_zahl)
  drei:
  - $eingabe *= 10 $eingabe += 3 $zahl := $eingabe J(sag_zahl)
  vier:
  - $eingabe *= 10 $eingabe += 4 $zahl := $eingabe J(sag_zahl)
  fuenf:
  - $eingabe *= 10 $eingabe += 5 $zahl := $eingabe J(sag_zahl)
  sechs:
  - $eingabe *= 10 $eingabe += 6 $zahl := $eingabe J(sag_zahl)
  sieben:
  - $eingabe *= 10 $eingabe += 7 $zahl := $eingabe J(sag_zahl)
  acht:
  - $eingabe *= 10 $eingabe += 8 $zahl := $eingabe J(sag_zahl)
  neun:
  - $eingabe *= 10 $eingabe += 9 $zahl := $eingabe J(sag_zahl)
  null:
  - $eingabe *= 10               $zahl := $eingabe J(sag_zahl)

  auswerten:
  - $operator == 0? $wert := $eingabe $eingabe := 0 J(ausgewertet)
  - $operator == 1? $wert += $eingabe $eingabe := 0 J(ausgewertet)
  - $operator == 2? $wert -= $eingabe $eingabe := 0 J(ausgewertet)
  - $operator == 3? $wert *= $eingabe $eingabe := 0 J(ausgewertet)
  - $operator == 4? $wert /= $eingabe $eingabe := 0 J(ausgewertet)

  ausgewertet:
  - $neuer_operator == 0? $operator := 0 $zahl := $wert J(sag_zahl)
  - $neuer_operator == 1? $operator := 1 P(plus)
  - $neuer_operator == 2? $operator := 2 P(minus)
  - $neuer_operator == 2? $operator := 2 P(minus)
  - $neuer_operator == 4? $operator := 4 P(minus)

  gleich:
  - $neuer_operator := 0 J(auswerten)
  plus:
  - $neuer_operator := 1 J(auswerten)
  minus:
  - $neuer_operator := 2 J(auswerten)
  mal:
  - $neuer_operator := 3 J(auswerten)
  geteilt:
  - $neuer_operator := 4 J(auswerten)


#
# Ab hier kommt der Code, um eine Zahl zu spreche. $zahl muss die Zahl
# enthalten, und dann gehts mit J(sag_zahl) los
#

  # einer, sowie kleine zweistellige Zahlen (bis 19)
  einer:
  - $ziffer == 0?               J(einer_return)
  - $ziffer == 1?  P(ein)       J(einer_return)
  - $ziffer == 2?  P(zwei)      J(einer_return)
  - $ziffer == 3?  P(drei)      J(einer_return)
  - $ziffer == 4?  P(vier)      J(einer_return)
  - $ziffer == 5?  P(fuenf)     J(einer_return)
  - $ziffer == 6?  P(sechs)     J(einer_return)
  - $ziffer == 7?  P(sieben)    J(einer_return)
  - $ziffer == 8?  P(acht)      J(einer_return)
  - $ziffer == 9?  P(neun)      J(einer_return)
  - $ziffer == 10? P(zehn)      J(einer_return)
  - $ziffer == 11? P(elf)       J(einer_return)
  - $ziffer == 12? P(zwoelf)    J(einer_return)
  - $ziffer == 13? P(dreizehn)  J(einer_return)
  - $ziffer == 14? P(vierzehn)  J(einer_return)
  - $ziffer == 15? P(fuenfzehn) J(einer_return)
  - $ziffer == 16? P(sechzehn)  J(einer_return)
  - $ziffer == 17? P(siebzehn)  J(einer_return)
  - $ziffer == 18? P(achtzehn)  J(einer_return)
  - $ziffer == 19? P(neunzehn)  J(einer_return)

  einer_return:
  - $einer_return == 0? #fertig
  - $einer_return == 1? J(und_zig)
  - $einer_return == 2? J(zweistellig_return)
  - $einer_return == 3? J(hundert)

  # bis 99
  zweistellig:
  - $zweistellig < 20? $ziffer := $zweistellig  $einer_return :=2 J(einer)
  - $zehner:=$zweistellig $zehner/=10 $ziffer := $zweistellig $ziffer %= 10 J(zweistellig2)

  zweistellig2:
  - $ziffer == 0? J(zig)
  - $einer_return := 1 J(einer)

  und_zig:
  - P(und) J(zig)

  zig:
  - $zehner == 2?  P(zwanzig)   J(zweistellig_return)
  - $zehner == 3?  P(dreissig)  J(zweistellig_return)
  - $zehner == 4?  P(vierzig)   J(zweistellig_return)
  - $zehner == 5?  P(fuenfzig)  J(zweistellig_return)
  - $zehner == 6?  P(sechzig)   J(zweistellig_return)
  - $zehner == 7?  P(siebzig)   J(zweistellig_return)
  - $zehner == 8?  P(achtzig)   J(zweistellig_return)
  - $zehner == 9?  P(neunzig)   J(zweistellig_return)

  zweistellig_return:
  - $zweistellig_return == 0? # fertig
  - $zweistellig_return == 1? J(tausend)

  dreistellig:
  - $dreistellig < 100? $zweistellig := $dreistellig $zweistellig_return := 0 J(zweistellig)
  - $ziffer := $dreistellig $ziffer /= 100 $zweistellig := $dreistellig $zweistellig %= 100 $einer_return := 3 J(einer)

  hundert:
  - P(hundert) $zweistellig_return := 0 J(zweistellig)

  sag_zahl:
  # spezialfÃ¤lle
  - $zahl == 0? P(null)
  - $zahl == 1? P(eins)
  - $zahl < 1000? $dreistellig := $zahl J(dreistellig)
  - $zweistellig := $zahl $zweistellig /= 1000 $dreistellig := $zahl $dreistellig %= 1000 $zweistellig_return := 1 J(zweistellig)

  tausend:
  - P(tausend) J(dreistellig)





